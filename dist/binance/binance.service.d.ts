import { OnModuleInit, OnModuleDestroy } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
export declare class BinanceService implements OnModuleInit, OnModuleDestroy {
    private configService;
    private readonly logger;
    private httpClient;
    private apiKey;
    private apiSecret;
    private userDataStream;
    private listenKey;
    private keepAliveInterval;
    private orderUpdateCallback;
    private readonly baseURL;
    private readonly wsBaseURL;
    constructor(configService: ConfigService);
    onModuleInit(): Promise<void>;
    onModuleDestroy(): Promise<void>;
    private createSignature;
    private makeSignedRequest;
    private setupUserDataStream;
    private handleOrderUpdate;
    setOrderUpdateCallback(callback: (data: any) => void): void;
    getAccountBalance(): Promise<any>;
    getSymbolPrice(symbol: string): Promise<number>;
    getSymbolInfo(symbol: string): Promise<any>;
    placeMarketOrder(symbol: string, side: 'BUY' | 'SELL', quantity: string): Promise<any>;
    placeStopLossOrder(symbol: string, side: 'BUY' | 'SELL', quantity: string, stopPrice: number): Promise<any>;
    placeTakeProfitOrder(symbol: string, side: 'BUY' | 'SELL', quantity: string, stopPrice: number): Promise<any>;
    cancelOrder(symbol: string, orderId: number): Promise<any>;
    private cleanup;
}
